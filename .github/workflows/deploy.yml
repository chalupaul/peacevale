on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v0
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      # Build inside Docker containers
      - name: sam build
        run: sam build --use-container --template-file ./sam/main.yml
      # Prevent prompts and failure when the stack is unchanged
      - name: sam deploy
        run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset
      - name: Read .nvmrc
        run: echo ::set-output name=NVMRC::$(cat .nvmrc)
        id: nvmrc
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "${{ steps.nvmrc.outputs.NVMRC }}"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn build
        run: yarn build
        if: steps.yarn-cache.outputs.cache-hit != 'true'
      - name: yarn install
        run: yarn install
      - name: deploy site cache
        run: aws s3 sync --cache-control 'max-age=604800' --exclude index.html build/ s3://peacevaleweb/
      - name: deploy site
        run: aws s3 sync --cache-control 'no-cache' build/ s3://peacevaleweb/